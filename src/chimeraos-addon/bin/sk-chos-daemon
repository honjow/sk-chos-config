#!/bin/bash

if [ "$EUID" -ne 0 ]; then
    echo "This script must be run as root or with sudo."
    exit 1
fi

PRODUCT=$(cat /sys/class/dmi/id/product_name)
SYS_VENDOR=$(cat /sys/class/dmi/id/sys_vendor)

if [ -x "$(command -v sk-unlock-pacman)" ]; then
    sk-unlock-pacman
fi

FORCE_ENABLE_INPUTPLUMBER=""

ENABLE_MCU_POWERSAVE=""
# 默认禁用 mcu powersave。 启用会导致 ROG Ally 睡眠唤醒后 N-Key 丢失
if [[ "$PRODUCT" =~ "ROG Ally RC71L" ]]; then
    ENABLE_MCU_POWERSAVE="0"

    # 如果内核名称包含 -skX-chimeraos-X ，启用 mcu powersave
    if [[ "$(uname -r)" =~ -sk[1-9]-chimeraos-[1-9] ]]; then
        ENABLE_MCU_POWERSAVE="1"
    fi
elif [[ "$PRODUCT" =~ "ROG Ally X RC72L" ]]; then
    ENABLE_MCU_POWERSAVE="1"
    # 如果内核名称包含 -skX-chimeraos-X ，启用 InputPlumber, 禁用 hhd
    if [[ "$(uname -r)" =~ -sk[1-9]-chimeraos-[1-9] ]]; then
        FORCE_ENABLE_INPUTPLUMBER="1"
    fi
fi

echo "Enable MCU powersave: $ENABLE_MCU_POWERSAVE"
if [ -n "$ENABLE_MCU_POWERSAVE" ]; then
    if [ -f /sys/devices/platform/*/mcu_powersave ]; then
        for i in /sys/devices/platform/*/mcu_powersave; do
            if [ "$(cat $i)" != "$ENABLE_MCU_POWERSAVE" ]; then
                echo "$ENABLE_MCU_POWERSAVE" >$i
            fi
        done
    fi
    if [ -f /sys/class/firmware-attributes/asus-armoury/attributes/mcu_powersave/current_value ]; then
        if [ "$(cat /sys/class/firmware-attributes/asus-armoury/attributes/mcu_powersave/current_value)" != "$ENABLE_MCU_POWERSAVE" ]; then
            echo "$ENABLE_MCU_POWERSAVE" >/sys/class/firmware-attributes/asus-armoury/attributes/mcu_powersave/current_value
        fi
    fi
fi


if [ -n "$FORCE_ENABLE_INPUTPLUMBER" ]; then
    systemctl disable --now hhd@gamer || true

    # check inputplumber is masked
    is_masked=$(systemctl is-enabled inputplumber)
    if [[ "$is_masked" == "masked" ]]; then
        systemctl unmask inputplumber
    fi
    systemctl enable --now inputplumber
    echo "Force enable inputplumber and disable hhd for ROG Ally X RC72L"
fi


# 为 atd 创建目录
mkdir -p /var/spool/atd

# frzr-unlock
if [ -x "$(command -v frzr-unlock)" ]; then
    frzr-unlock
fi

# asusctl
shortcut_path="/usr/share/applications/rog-control-center.desktop"
no_display="false"
if [[ "$SYS_VENDOR" != "ASUSTeK COMPUTER INC." ]]; then
    no_display="true"
fi

if [[ -f "$shortcut_path" ]]; then
    if grep -q "NoDisplay=" "$shortcut_path"; then
        sed -i "s/NoDisplay=.*/NoDisplay=$no_display/" "$shortcut_path"
    else
        echo "NoDisplay=$no_display" >>"$shortcut_path"
    fi
fi

# WAYDROID FIX
if [[ -f "/var/lib/waydroid/lxc/waydroid/config" ]]; then
    echo "Removing unneeded apparmor entry from Waydroid LXC"
    sed -i '/lxc\.apparmor\.profile\s*=\s*unconfined/d' "/var/lib/waydroid/lxc/waydroid/config"
fi

# set hibernatemode
sleep_conf_dir="/etc/systemd/sleep.conf.d"
hibernatemode_config="${sleep_conf_dir}/hibernatemode.conf"
config=$(cat $hibernatemode_config | grep "HibernateMode")
if [[ ! -f "$hibernatemode_config" || -z $config ]]; then
    mkdir -p "$sleep_conf_dir"
    echo "[Sleep]" >"$hibernatemode_config"
    echo "HibernateMode=shutdown" >>"$hibernatemode_config"
fi

# setup aw87xxx
if [ -x "/usr/libexec/aw87xxx-setup" ]; then
    /usr/libexec/aw87xxx-setup
fi

# fstab
DEPLOYMENT=$(frzr-release)
fstab_path="/frzr_root/etc/fstab"
deplayment_fstab_path="/frzr_root/deployments/${DEPLOYMENT}/etc/fstab"
# 如果内容相同 删除 fstab_path
if [[ -f "$fstab_path" && -f "$deplayment_fstab_path" ]]; then
    if echo $(cat $deplayment_fstab_path 2>/dev/null) | grep -q "$(cat $fstab_path 2>/dev/null)"; then
        rm -f "$fstab_path"
    fi
fi
