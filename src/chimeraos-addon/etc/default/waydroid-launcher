# from https://github.com/ublue-os/bazzite/blob/main/system_files/desktop/shared/etc/default/waydroid-launcher

# Adjust the below values to set the resolution for devices not explicitly checked for.
# This includes all laptops, all desktops, and some handhelds.
WAYDROID_UNKNOWN_WIDTH=1920
WAYDROID_UNKNOWN_HEIGHT=1080
WAYDROID_GRALLOC=minigbm_gbm_mesa

PRODUCT=$(cat /sys/devices/virtual/dmi/id/product_name)

LIST_800P_DEVICES=(
    "Jupiter"
    "Galileo"
    "GEEK"
    "G1619-05"
)

LIST_1080P_DEVICES=(
    "ROG Ally RC71L"
    "ROG Ally X"
    "G1618-04"
    "G1617-01"
    "Loki Max"
    "AIR"
    "ONEXPLAYER F1"
)

LIST_1200P_DEVICES=(
    "AYANEO 2"
    "AOKZOE A1"
    "NEO-01"
    "Claw 8"
)

LIST_1600P_DEVICES=(
    "83E1"
    "ONEXPLAYER 2"
)

LIST_1600P_BIG_DEVICES=(
    "V3"
)

LIST_720P_DEVICES=(
    "Win600"
    "G1618-03"
)

WAYDROID_WIDTH=$WAYDROID_UNKNOWN_WIDTH
WAYDROID_HEIGHT=$WAYDROID_UNKNOWN_HEIGHT
WAYDROID_DENSITY=""

for device in "${LIST_800P_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=1280
        WAYDROID_HEIGHT=800
        WAYDROID_DENSITY=215
        break
    fi
done

for device in "${LIST_1080P_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=1920
        WAYDROID_HEIGHT=1080
        break
    fi
done

for device in "${LIST_1200P_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=1920
        WAYDROID_HEIGHT=1200
        break
    fi
done

for device in "${LIST_1600P_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=2560
        WAYDROID_HEIGHT=1600
        WAYDROID_DENSITY=340
        break
    fi
done

for device in "${LIST_1600P_BIG_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=2560
        WAYDROID_HEIGHT=1600
        WAYDROID_DENSITY=240
        break
    fi
done

for device in "${LIST_720P_DEVICES[@]}"; do
    if [[ "$PRODUCT" =~ $device ]]; then
        WAYDROID_WIDTH=1280
        WAYDROID_HEIGHT=720
        WAYDROID_DENSITY=215
        break
    fi
done

original_user=$(ps -o user= -p $PPID)
original_home=$(getent passwd "$original_user" | cut -d: -f6)
for i in "$original_home"/.config/environment.d/*.conf; do
    [[ -f "${i}" ]] && . "${i}"
done

if [ -x "$(command -v edid-decode)" ] && [[ -z "$WAYDROID_DENSITY" || -z "$WAYDROID_WIDTH" || -z "$WAYDROID_HEIGHT" ]]; then
    connected=$(grep -H . /sys/class/drm/card*-*/status | grep :connected | cut -d: -f1 | head -n1 | sed 's/\/status//')
    if [ -n "$connected" ]; then
        EDID=$(cat "$connected/edid" | edid-decode)
        size_width=$(echo "$EDID" | grep 'Maximum image size' | awk '{print $4}')
        size_height=$(echo "$EDID" | grep 'Maximum image size' | awk '{print $7}')
        resolution=$(echo "$EDID" | grep 'DTD 1: ' | awk '{print $3}')
        resolution_width=$(echo "$resolution" | cut -d'x' -f1)
        resolution_height=$(echo "$resolution" | cut -d'x' -f2)
        if [ -n "$resolution_width" ] && [ -n "$resolution_height" ] && [ -z "$WAYDROID_WIDTH" ] && [ -z "$WAYDROID_HEIGHT" ]; then
            # 长边为 width 短边为 height
            if [ $resolution_width -gt $resolution_height ]; then
                WAYDROID_WIDTH=$resolution_width
                WAYDROID_HEIGHT=$resolution_height
            else
                WAYDROID_WIDTH=$resolution_height
                WAYDROID_HEIGHT=$resolution_width
            fi
        fi


        if [[ -z "$WAYDROID_DENSITY" ]]; then
            # 计算像素密度
            ppi=$(echo "scale=4; sqrt($resolution_width^2 + $resolution_height^2) / (sqrt($size_width^2 + $size_height^2) / 2.54)" | bc -l)
            ppi=${ppi%.*}

            # 根据像素密度设置 WAYDROID_DENSITY 最接近的整 10 数
            WAYDROID_DENSITY=$(echo "scale=0; ($ppi + 5) / 10 * 10" | bc -l)

            # 根据像素密度设置 WAYDROID_DENSITY 最接近的整数
            # DENSITY_LIST=(160 240 320 480 640)
            # for density in "${DENSITY_LIST[@]}"; do
            #     if [ $ppi -lt $density ]; then
            #         WAYDROID_DENSITY=$density
            #         break
            #     fi
            # done
        fi
    fi 
fi